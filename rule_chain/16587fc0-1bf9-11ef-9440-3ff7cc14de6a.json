{
  "entityType" : "RULE_CHAIN",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : null,
    "debugMode" : true,
    "externalId" : null,
    "firstRuleNodeId" : {
      "entityType" : "RULE_NODE",
      "id" : "166725c0-1bf9-11ef-9440-3ff7cc14de6a"
    },
    "id" : {
      "entityType" : "RULE_CHAIN",
      "id" : "16587fc0-1bf9-11ef-9440-3ff7cc14de6a"
    },
    "name" : "Stall Waiting Time",
    "root" : false,
    "type" : "CORE"
  },
  "metaData" : {
    "connections" : [ {
      "fromIndex" : 0,
      "toIndex" : 3,
      "type" : "True"
    }, {
      "fromIndex" : 2,
      "toIndex" : 1,
      "type" : "Success"
    }, {
      "fromIndex" : 2,
      "toIndex" : 4,
      "type" : "Success"
    }, {
      "fromIndex" : 2,
      "toIndex" : 9,
      "type" : "Success"
    }, {
      "fromIndex" : 3,
      "toIndex" : 15,
      "type" : "True"
    }, {
      "fromIndex" : 4,
      "toIndex" : 5,
      "type" : "Success"
    }, {
      "fromIndex" : 5,
      "toIndex" : 7,
      "type" : "Success"
    }, {
      "fromIndex" : 6,
      "toIndex" : 13,
      "type" : "Success"
    }, {
      "fromIndex" : 6,
      "toIndex" : 14,
      "type" : "Success"
    }, {
      "fromIndex" : 7,
      "toIndex" : 11,
      "type" : "Success"
    }, {
      "fromIndex" : 7,
      "toIndex" : 12,
      "type" : "Success"
    }, {
      "fromIndex" : 9,
      "toIndex" : 7,
      "type" : "Success"
    }, {
      "fromIndex" : 10,
      "toIndex" : 6,
      "type" : "True"
    }, {
      "fromIndex" : 11,
      "toIndex" : 10,
      "type" : "Success"
    }, {
      "fromIndex" : 12,
      "toIndex" : 11,
      "type" : "Success"
    }, {
      "fromIndex" : 14,
      "toIndex" : 8,
      "type" : "Success"
    }, {
      "fromIndex" : 15,
      "toIndex" : 16,
      "type" : "Success"
    }, {
      "fromIndex" : 16,
      "toIndex" : 2,
      "type" : "Success"
    } ],
    "firstNodeIndex" : 0,
    "nodes" : [ {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 20,
        "layoutY" : 282
      },
      "configuration" : {
        "originatorTypes" : [ "DEVICE" ]
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "166725c0-1bf9-11ef-9440-3ff7cc14de6a"
      },
      "name" : "Device",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbOriginatorTypeFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 839,
        "layoutY" : 59
      },
      "configuration" : {
        "ruleChainId" : "7964d350-5fa8-11ef-ae93-f7fbfc2df8a7"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "f0bf9390-604d-11ef-ae93-f7fbfc2df8a7"
      },
      "name" : "stall count",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.flow.TbRuleChainInputNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 435,
        "layoutY" : 118
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return {msg: msg, metadata: metadata, msgType: msgType};",
        "tbelScript" : "if(msg.occupancy==\"occupied\" || msg.occupancy==\"maintenance\"){    //here occupancy status data from the sensor is maniputed ..the status is occupied the we assign new data attribute occ as 1 and vacant to 0.\n    \n    msg.occ=1;\n}\n\nelse{\n    msg.occ=0;\n}\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "987e1680-667d-11ef-be79-2954bfc55759"
      },
      "name" : "occ 1",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 134,
        "layoutY" : 408
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "if(msgType === 'POST_TELEMETRY_REQUEST') {\r\n    if(metadata.deviceType === 'Occupancy Sensor') {\r\n        return true ;\r\n    } \r\n}\r\nreturn false;",
        "tbelScript" : "return msg.temperature > 20;"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "65878f31-667e-11ef-be79-2954bfc55759"
      },
      "name" : "Device Filter",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 750,
        "layoutY" : 317
      },
      "configuration" : {
        "direction" : "TO",
        "relationType" : "Contains",
        "deduplicationInSec" : 10,
        "aggMappings" : [ {
          "sourceScope" : "LATEST_TELEMETRY",
          "source" : "occ",
          "defaultValue" : 0,
          "aggFunction" : "COUNT_UNIQUE",
          "target" : "currenttime"
        } ],
        "outMsgType" : "POST_TELEMETRY_REQUEST"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "489259d0-6883-11ef-8c60-9ba93f4c7051"
      },
      "name" : "time",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.analytics.latest.telemetry.TbAggLatestTelemetryNodeV2"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1031,
        "layoutY" : 339
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return {msg: msg, metadata: metadata, msgType: msgType};",
        "tbelScript" : "msg.curr=metadata.ts;\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "83985680-6886-11ef-8c60-9ba93f4c7051"
      },
      "name" : "vg",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1542,
        "layoutY" : 235
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return {msg: msg, metadata: metadata, msgType: msgType};",
        "tbelScript" : "var Wait_Time=(parseFloat(metadata.curr)-parseFloat(metadata.occ_time))+parseFloat(metadata.wait_time_d);\n\nvar vac=(parseFloat(metadata.curr)-parseFloat(metadata.vac_time))+parseFloat(metadata.wait_time_d);\nvar Timevac=Math.floor((vac/60000)*100)/100;\n\n\nvar Time=Math.floor((Wait_Time/60000)*100)/100;\n\nif(msg.occupancy==\"occupied\"){\n    \n    if(Time<0){\n        Time=0;\n    }\n    \n    else{\n    msg.Wait_Time=Time;\n    msg.duration=Time;\n\n\n}\n}\n\nelse if (msg.occupancy==\"vacant\" || msg.occ==0){\n    if(Timevac<0){\n        Timevac=0;\n    }\n    else{\n    msg.Wait_Time=0;\n    msg.duration=Timevac;}\n\n\n}\n\nelse{\n    msg.cur=\"no\"\n\n}\n\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "183f4cd0-6887-11ef-8c60-9ba93f4c7051"
      },
      "name" : "rer",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1061,
        "layoutY" : 219
      },
      "configuration" : {
        "defaultTTL" : 0,
        "skipLatestPersistence" : false,
        "useServerTs" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "6d2d36f0-688a-11ef-8c60-9ba93f4c7051"
      },
      "name" : "fcvghbjn",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1877,
        "layoutY" : 410
      },
      "configuration" : {
        "ruleChainId" : "5bf41390-4cec-11ef-aac4-6f8a84baac26"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "7eafad80-688b-11ef-8c60-9ba93f4c7051"
      },
      "name" : "root",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.flow.TbRuleChainInputNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 819,
        "layoutY" : 151
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return {msg: msg, metadata: metadata, msgType: msgType};",
        "tbelScript" : "if(msg.occupancy==\"occupied\"){\n    msg.occ_time=metadata.ts;\n}\nelse{\n    msg.vac_time=metadata.ts;\n}\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "af3de660-6895-11ef-8c60-9ba93f4c7051"
      },
      "name" : "tr",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1345,
        "layoutY" : 268
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "if(msgType === 'POST_TELEMETRY_REQUEST') {\r\n    if(metadata.deviceType === 'Occupancy Sensor') {\r\n        return true ;\r\n    } \r\n}\r\nreturn false;",
        "tbelScript" : "return msg.temperature > 20;"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "136548d0-6897-11ef-8c60-9ba93f4c7051"
      },
      "name" : "Device Filter",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1417,
        "layoutY" : 114
      },
      "configuration" : {
        "tellFailureIfAbsent" : false,
        "fetchTo" : "METADATA",
        "clientAttributeNames" : [ ],
        "sharedAttributeNames" : [ ],
        "serverAttributeNames" : [ ],
        "latestTsKeyNames" : [ "curr", "occ_time", "wait_time_d", "vac_time" ],
        "getLatestValueWithTs" : false
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "43f6b020-69cc-11ef-8c60-9ba93f4c7051"
      },
      "name" : "fghbjn",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.metadata.TbGetAttributesNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1160,
        "layoutY" : 100
      },
      "configuration" : {
        "inputValueKey" : "curr",
        "outputValueKey" : "delta",
        "useCache" : true,
        "addPeriodBetweenMsgs" : true,
        "periodValueKey" : "wait_time_d",
        "round" : null,
        "tellFailureIfDeltaIsNegative" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "43f6b021-69cc-11ef-8c60-9ba93f4c7051"
      },
      "name" : "Delta Waiting Time",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.metadata.CalculateDeltaNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1797,
        "layoutY" : 157
      },
      "configuration" : {
        "defaultTTL" : 0,
        "skipLatestPersistence" : false,
        "useServerTs" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "cadd21a0-7647-11ef-8c60-9ba93f4c7051"
      },
      "name" : "Save Time Stamp",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1767,
        "layoutY" : 264
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "var time = metadata.ts;\n\n// Initialize the date object with the timestamp in milliseconds (GMT time)\nvar dateGMT = new Date(parseInt(time));  // This is the GMT time\n\n// Dubai time offset in milliseconds (GMT+4)\nvar dubaiOffset = 4 * 60 * 60 * 1000; // 4 hours in milliseconds\n\n// Create a new date object adjusted for Dubai time\nvar dateDubai = new Date(dateGMT.getTime() + dubaiOffset);\n\n// Extract GMT time (UTC)\nvar yearGMT = dateGMT.getUTCFullYear();\nvar monthGMT = dateGMT.getUTCMonth() + 1; // getUTCMonth() returns 0-11, so we add 1\nvar dayGMT = dateGMT.getUTCDate();\nvar hoursGMT = dateGMT.getUTCHours();\nvar minutesGMT = dateGMT.getUTCMinutes();\nvar secondsGMT = dateGMT.getUTCSeconds();\nvar millisecondsGMT = dateGMT.getUTCMilliseconds();\n\n// Extract Dubai time\nvar yearDubai = dateDubai.getFullYear();\nvar monthDubai = dateDubai.getMonth() + 1; // getMonth() returns 0-11, so we add 1\nvar dayDubai = dateDubai.getDate();\nvar hoursDubai = dateDubai.getHours();\nvar minutesDubai = dateDubai.getMinutes();\nvar secondsDubai = dateDubai.getSeconds();\nvar millisecondsDubai = dateDubai.getMilliseconds();\n\n// Construct a GMT date string in the format \"YYYY-MM-DD\"\nmsg.dateGMT = yearGMT + \"-\" + (monthGMT < 10 ? \"0\" + monthGMT : monthGMT) + \"-\" + (dayGMT < 10 ? \"0\" + dayGMT : dayGMT);\n\n// Construct a GMT time string (HH:mm:ss.SSS)\nmsg.timeGMT = (hoursGMT < 10 ? \"0\" + hoursGMT : hoursGMT) + \":\" + \n              (minutesGMT < 10 ? \"0\" + minutesGMT : minutesGMT) + \":\" + \n              (secondsGMT < 10 ? \"0\" + secondsGMT : secondsGMT) + \".\" + \n              (millisecondsGMT < 100 ? \"0\" + (millisecondsGMT < 10 ? \"00\" + millisecondsGMT : \"0\" + millisecondsGMT) : millisecondsGMT);\n\n// Construct a Dubai date string in the format \"YYYY-MM-DD\"\nmsg.dateDubai = yearDubai + \"-\" + (monthDubai < 10 ? \"0\" + monthDubai : monthDubai) + \"-\" + (dayDubai < 10 ? \"0\" + dayDubai : dayDubai);\n\n// Construct a Dubai time string (HH:mm:ss.SSS)\nmsg.timeDubai = (hoursDubai < 10 ? \"0\" + hoursDubai : hoursDubai) + \":\" + \n                (minutesDubai < 10 ? \"0\" + minutesDubai : minutesDubai) + \":\" + \n                (secondsDubai < 10 ? \"0\" + secondsDubai : secondsDubai)  ;\n               // (millisecondsDubai < 100 ? \"0\" + (millisecondsDubai < 10 ? \"00\" + millisecondsDubai : \"0\" + millisecondsDubai) : millisecondsDubai);\n\n// Also returning the original timestamp for reference\nmsg.time = time;\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n",
        "tbelScript" : "var time = metadata.ts;\n\n// Convert milliseconds to seconds\nvar secondsSinceEpoch = time / 1000;\n\n// Calculate the number of seconds in a year, month, and day\nvar secondsInYear = 365 * 24 * 60 * 60; // Approximation (ignoring leap years)\nvar secondsInMonth = 30 * 24 * 60 * 60; // Approximation (simplification)\nvar secondsInDay = 24 * 60 * 60;\n\n// Calculate year\nvar year = 1970;\nwhile (secondsSinceEpoch >= secondsInYear) {\n    secondsSinceEpoch -= secondsInYear;\n    year++;\n}\n\n// Calculate month\nvar month = 1; // January\nwhile (secondsSinceEpoch >= secondsInMonth) {\n    secondsSinceEpoch -= secondsInMonth;\n    month++;\n}\n\n// Calculate day\nvar day = 1; // Start from the first day of the month\nwhile (secondsSinceEpoch >= secondsInDay) {\n    secondsSinceEpoch -= secondsInDay;\n    day++;\n}\n\n// Calculate hours, minutes, and seconds using integer division\nvar hours = (secondsSinceEpoch / 3600);\nvar minutes = (secondsSinceEpoch % 3600) / 60;\nvar seconds = secondsSinceEpoch % 60;\n\n// Construct a date string in the format \"YYYY-MM-DD\"\nmsg.date = year + \"-\" + (month < 10 ? \"0\" + month : month) + \"-\" + (day < 10 ? \"0\" + day : day);\n\n// Construct a time string (HH:mm:ss) without float values\nmsg.timeOnly = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n\nmsg.time = time;\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*var time = metadata.ts;\n\n// Manually convert timestamp (milliseconds) to seconds, minutes, and hours using basic MVEL arithmetic\nvar seconds = (time / 1000) % 60;\nvar minutes = (time / (1000 * 60)) % 60;\nvar hours = (time / (1000 * 60 * 60)) % 24;\n\n// Construct a time string (HH:mm:ss) manually\nmsg.timeOnly = hours + \":\" + minutes + \":\" + seconds;\n\n// Construct a dummy date string (placeholder since MVEL can't format dates easily)\nmsg.date = \"YYYY-MM-DD\";  // Placeholder; replace with external handling if needed\n\nmsg.time = time;\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n\n*/\n/*var time= metadata.ts;\nmsg.time=time;\n\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};\n\n*/\n\n\n/*\nvar time = metadata.ts;\n\n// Convert milliseconds to seconds\nvar secondsSinceEpoch = time / 1000;\n\n// Calculate the number of seconds in a year, month, and day\nvar secondsInYear = 365 * 24 * 60 * 60; // Approximation (ignoring leap years)\nvar secondsInMonth = 30 * 24 * 60 * 60; // Approximation (simplification)\nvar secondsInDay = 24 * 60 * 60;\n\n// Calculate year\nvar year = 1970;\nwhile (secondsSinceEpoch >= secondsInYear) {\n    secondsSinceEpoch -= secondsInYear;\n    year++;\n}\n\n// Calculate month\nvar month = 1; // January\nwhile (secondsSinceEpoch >= secondsInMonth) {\n    secondsSinceEpoch -= secondsInMonth;\n    month++;\n}\n\n// Calculate day\nvar day = 1; // Start from the first day of the month\nwhile (secondsSinceEpoch >= secondsInDay) {\n    secondsSinceEpoch -= secondsInDay;\n    day++;\n}\n\n// Calculate hours, minutes, and seconds\nvar hours = (secondsSinceEpoch / 3600) % 24;\nvar minutes = (secondsSinceEpoch / 60) % 60;\nvar seconds = secondsSinceEpoch % 60;\n\n// Construct a date string in the format \"YYYY-MM-DD\"\nmsg.date = year + \"-\" + (month < 10 ? \"0\" + month : month) + \"-\" + (day < 10 ? \"0\" + day : day);\n\n// Construct a time string (HH:mm:ss)\nmsg.timeOnly = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n\nmsg.time = time;\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n\n\n\n*/\n\n/*\n\n\nvar time = metadata.ts;\n\n// Convert milliseconds to seconds\nvar secondsSinceEpoch = time / 1000;\n\n// Calculate the number of seconds in a year, month, and day\nvar secondsInYear = 365 * 24 * 60 * 60; // Approximation (ignoring leap years)\nvar secondsInMonth = 30 * 24 * 60 * 60; // Approximation (simplification)\nvar secondsInDay = 24 * 60 * 60;\n\n// Calculate year\nvar year = 1970;\nwhile (secondsSinceEpoch >= secondsInYear) {\n    secondsSinceEpoch -= secondsInYear;\n    year++;\n}\n\n// Calculate month\nvar month = 1; // January\nwhile (secondsSinceEpoch >= secondsInMonth) {\n    secondsSinceEpoch -= secondsInMonth;\n    month++;\n}\n\n// Calculate day\nvar day = 1; // Start from the first day of the month\nwhile (secondsSinceEpoch >= secondsInDay) {\n    secondsSinceEpoch -= secondsInDay;\n    day++;\n}\n\n// Calculate hours, minutes, and seconds\nvar hours = (secondsSinceEpoch / 3600) % 24;\nvar minutes = (secondsSinceEpoch / 60) % 60;\nvar seconds = secondsSinceEpoch % 60;\n\n// Construct a date string in the format \"YYYY-MM-DD\"\nmsg.date = year + \"-\" + (month < 10 ? \"0\" + month : month) + \"-\" + (day < 10 ? \"0\" + day : day);\n\n// Construct a time string (HH:mm:ss)\nmsg.timeOnly = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n\nmsg.time = time;\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n\n*/\n\n"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "2dcae780-86f0-11ef-9570-4dbca12c5d75"
      },
      "name" : "ts converter",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 321,
        "layoutY" : 494
      },
      "configuration" : {
        "tellFailureIfAbsent" : true,
        "fetchTo" : "DATA",
        "clientAttributeNames" : [ ],
        "sharedAttributeNames" : [ ],
        "serverAttributeNames" : [ "maintenance" ],
        "latestTsKeyNames" : [ ],
        "getLatestValueWithTs" : false
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "b5ca0ba0-8a0d-11ef-9570-4dbca12c5d75"
      },
      "name" : "maintenance",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.metadata.TbGetAttributesNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 409,
        "layoutY" : 293
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "if (msg.ss_maintenance==1){\n    msg.occupancy=\"maintenance\";\n}\n\n\n\n\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "07c8d700-8a0f-11ef-9570-4dbca12c5d75"
      },
      "name" : "maintenance",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    } ],
    "ruleChainConnections" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}