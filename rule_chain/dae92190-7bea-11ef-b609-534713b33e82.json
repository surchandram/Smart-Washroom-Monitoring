{
  "entityType" : "RULE_CHAIN",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : null,
    "debugMode" : false,
    "externalId" : null,
    "firstRuleNodeId" : {
      "entityType" : "RULE_NODE",
      "id" : "225dac30-7beb-11ef-b609-534713b33e82"
    },
    "id" : {
      "entityType" : "RULE_CHAIN",
      "id" : "dae92190-7bea-11ef-b609-534713b33e82"
    },
    "name" : "tof",
    "root" : false,
    "type" : "CORE"
  },
  "metaData" : {
    "connections" : [ {
      "fromIndex" : 0,
      "toIndex" : 1,
      "type" : "True"
    }, {
      "fromIndex" : 1,
      "toIndex" : 3,
      "type" : "True"
    }, {
      "fromIndex" : 1,
      "toIndex" : 4,
      "type" : "True"
    }, {
      "fromIndex" : 2,
      "toIndex" : 6,
      "type" : "Success"
    }, {
      "fromIndex" : 3,
      "toIndex" : 7,
      "type" : "Success"
    }, {
      "fromIndex" : 4,
      "toIndex" : 7,
      "type" : "Success"
    }, {
      "fromIndex" : 6,
      "toIndex" : 5,
      "type" : "Success"
    }, {
      "fromIndex" : 7,
      "toIndex" : 2,
      "type" : "Success"
    } ],
    "firstNodeIndex" : 0,
    "nodes" : [ {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 374,
        "layoutY" : 144
      },
      "configuration" : {
        "originatorTypes" : [ "DEVICE" ]
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "225dac30-7beb-11ef-b609-534713b33e82"
      },
      "name" : "Device",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbOriginatorTypeFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 632,
        "layoutY" : 145
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "if(msgType === 'POST_TELEMETRY_REQUEST') {\r\n    if(metadata.deviceType === 'Tof') {\r\n        return true ;\r\n    } \r\n}\r\nreturn false;",
        "tbelScript" : "return msg.temperature > 20;"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "225dac31-7beb-11ef-b609-534713b33e82"
      },
      "name" : "Device Filter",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1291,
        "layoutY" : 166
      },
      "configuration" : {
        "defaultTTL" : 0,
        "skipLatestPersistence" : false,
        "useServerTs" : false
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "225e2160-7beb-11ef-b609-534713b33e82"
      },
      "name" : "Odour Air Quality",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 923,
        "layoutY" : 84
      },
      "configuration" : {
        "inputValueKey" : "line_1_period_in",
        "outputValueKey" : "line_1_period_sum_day",
        "mathFunction" : "SUM",
        "aggIntervalType" : "DAY",
        "timeZoneId" : "Etc/GMT+2",
        "aggIntervalValue" : 1,
        "aggIntervalTimeUnit" : "HOURS",
        "intervalPersistencePolicy" : "ON_EACH_CHECK",
        "outMsgType" : "POST_TELEMETRY_REQUEST",
        "intervalCheckValue" : 1,
        "intervalCheckTimeUnit" : "MINUTES",
        "statePersistencePolicy" : "ON_EACH_CHANGE",
        "statePersistenceValue" : 1,
        "statePersistenceTimeUnit" : "MINUTES",
        "autoCreateIntervals" : false,
        "periodValue" : 5,
        "periodTimeUnit" : "MINUTES",
        "parentEntitiesQuery" : {
          "type" : "group",
          "entityGroupId" : null
        }
      },
      "configurationVersion" : 2,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "96686610-7beb-11ef-b609-534713b33e82"
      },
      "name" : "sum",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.analytics.incoming.TbSimpleAggMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 899,
        "layoutY" : 232
      },
      "configuration" : {
        "inputValueKey" : "line_1_period_in",
        "outputValueKey" : "line_1_period_count_day",
        "mathFunction" : "COUNT",
        "aggIntervalType" : "DAY",
        "timeZoneId" : "Etc/GMT+2",
        "aggIntervalValue" : 1,
        "aggIntervalTimeUnit" : "HOURS",
        "intervalPersistencePolicy" : "ON_EACH_CHECK",
        "outMsgType" : "POST_TELEMETRY_REQUEST",
        "intervalCheckValue" : 1,
        "intervalCheckTimeUnit" : "MINUTES",
        "statePersistencePolicy" : "ON_EACH_CHANGE",
        "statePersistenceValue" : 1,
        "statePersistenceTimeUnit" : "MINUTES",
        "autoCreateIntervals" : false,
        "periodValue" : 5,
        "periodTimeUnit" : "MINUTES",
        "parentEntitiesQuery" : {
          "type" : "group",
          "entityGroupId" : null
        }
      },
      "configurationVersion" : 2,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "e573b070-7beb-11ef-b609-534713b33e82"
      },
      "name" : "count",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.analytics.incoming.TbSimpleAggMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1827,
        "layoutY" : 172
      },
      "configuration" : {
        "ruleChainId" : "8c0b8840-127e-11ef-8a9c-0bbae15aee71"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "26a9cf00-8134-11ef-9570-4dbca12c5d75"
      },
      "name" : "rrrr",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.flow.TbRuleChainInputNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1548,
        "layoutY" : 169
      },
      "configuration" : {
        "originatorSource" : "RELATED",
        "entityType" : null,
        "entityNamePattern" : null,
        "relationsQuery" : {
          "fetchLastLevelOnly" : false,
          "direction" : "TO",
          "maxLevel" : 1,
          "filters" : [ {
            "relationType" : "Contains",
            "entityTypes" : [ "ASSET" ]
          } ]
        }
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : false,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "6048c1a0-8137-11ef-9570-4dbca12c5d75"
      },
      "name" : "tof",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbChangeOriginatorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1067,
        "layoutY" : 159
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "var time = metadata.ts;\n\n// Initialize the date object with the timestamp in milliseconds (GMT time)\nvar dateGMT = new Date(parseInt(time));  // This is the GMT time\n\n// Dubai time offset in milliseconds (GMT+4)\nvar dubaiOffset = 4 * 60 * 60 * 1000; // 4 hours in milliseconds\n\n// Create a new date object adjusted for Dubai time\nvar dateDubai = new Date(dateGMT.getTime() + dubaiOffset);\n\n// Extract GMT time (UTC)\nvar yearGMT = dateGMT.getUTCFullYear();\nvar monthGMT = dateGMT.getUTCMonth() + 1; // getUTCMonth() returns 0-11, so we add 1\nvar dayGMT = dateGMT.getUTCDate();\nvar hoursGMT = dateGMT.getUTCHours();\nvar minutesGMT = dateGMT.getUTCMinutes();\nvar secondsGMT = dateGMT.getUTCSeconds();\nvar millisecondsGMT = dateGMT.getUTCMilliseconds();\n\n// Extract Dubai time\nvar yearDubai = dateDubai.getFullYear();\nvar monthDubai = dateDubai.getMonth() + 1; // getMonth() returns 0-11, so we add 1\nvar dayDubai = dateDubai.getDate();\nvar hoursDubai = dateDubai.getHours();\nvar minutesDubai = dateDubai.getMinutes();\nvar secondsDubai = dateDubai.getSeconds();\nvar millisecondsDubai = dateDubai.getMilliseconds();\n\n// Construct a GMT date string in the format \"YYYY-MM-DD\"\nmsg.dateGMT = yearGMT + \"-\" + (monthGMT < 10 ? \"0\" + monthGMT : monthGMT) + \"-\" + (dayGMT < 10 ? \"0\" + dayGMT : dayGMT);\n\n// Construct a GMT time string (HH:mm:ss.SSS)\nmsg.timeGMT = (hoursGMT < 10 ? \"0\" + hoursGMT : hoursGMT) + \":\" + \n              (minutesGMT < 10 ? \"0\" + minutesGMT : minutesGMT) + \":\" + \n              (secondsGMT < 10 ? \"0\" + secondsGMT : secondsGMT) + \".\" + \n              (millisecondsGMT < 100 ? \"0\" + (millisecondsGMT < 10 ? \"00\" + millisecondsGMT : \"0\" + millisecondsGMT) : millisecondsGMT);\n\n// Construct a Dubai date string in the format \"YYYY-MM-DD\"\nmsg.dateDubai_sumpeople = yearDubai + \"-\" + (monthDubai < 10 ? \"0\" + monthDubai : monthDubai) + \"-\" + (dayDubai < 10 ? \"0\" + dayDubai : dayDubai);\n\n// Construct a Dubai time string (HH:mm:ss.SSS)\nmsg.timeDubai_sumpeople = (hoursDubai < 10 ? \"0\" + hoursDubai : hoursDubai) + \":\" + \n                (minutesDubai < 10 ? \"0\" + minutesDubai : minutesDubai) + \":\" + \n                (secondsDubai < 10 ? \"0\" + secondsDubai : secondsDubai)  ;\n               // (millisecondsDubai < 100 ? \"0\" + (millisecondsDubai < 10 ? \"00\" + millisecondsDubai : \"0\" + millisecondsDubai) : millisecondsDubai);\n\n// Also returning the original timestamp for reference\nmsg.time = time;\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n",
        "tbelScript" : "var time = metadata.ts;\n\n// Convert milliseconds to seconds\nvar secondsSinceEpoch = time / 1000;\n\n// Calculate the number of seconds in a year, month, and day\nvar secondsInYear = 365 * 24 * 60 * 60; // Approximation (ignoring leap years)\nvar secondsInMonth = 30 * 24 * 60 * 60; // Approximation (simplification)\nvar secondsInDay = 24 * 60 * 60;\n\n// Calculate year\nvar year = 1970;\nwhile (secondsSinceEpoch >= secondsInYear) {\n    secondsSinceEpoch -= secondsInYear;\n    year++;\n}\n\n// Calculate month\nvar month = 1; // January\nwhile (secondsSinceEpoch >= secondsInMonth) {\n    secondsSinceEpoch -= secondsInMonth;\n    month++;\n}\n\n// Calculate day\nvar day = 1; // Start from the first day of the month\nwhile (secondsSinceEpoch >= secondsInDay) {\n    secondsSinceEpoch -= secondsInDay;\n    day++;\n}\n\n// Calculate hours, minutes, and seconds using integer division\nvar hours = (secondsSinceEpoch / 3600);\nvar minutes = (secondsSinceEpoch % 3600) / 60;\nvar seconds = secondsSinceEpoch % 60;\n\n// Construct a date string in the format \"YYYY-MM-DD\"\nmsg.date = year + \"-\" + (month < 10 ? \"0\" + month : month) + \"-\" + (day < 10 ? \"0\" + day : day);\n\n// Construct a time string (HH:mm:ss) without float values\nmsg.timeOnly = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n\nmsg.time = time;\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*var time = metadata.ts;\n\n// Manually convert timestamp (milliseconds) to seconds, minutes, and hours using basic MVEL arithmetic\nvar seconds = (time / 1000) % 60;\nvar minutes = (time / (1000 * 60)) % 60;\nvar hours = (time / (1000 * 60 * 60)) % 24;\n\n// Construct a time string (HH:mm:ss) manually\nmsg.timeOnly = hours + \":\" + minutes + \":\" + seconds;\n\n// Construct a dummy date string (placeholder since MVEL can't format dates easily)\nmsg.date = \"YYYY-MM-DD\";  // Placeholder; replace with external handling if needed\n\nmsg.time = time;\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n\n*/\n/*var time= metadata.ts;\nmsg.time=time;\n\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};\n\n*/\n\n\n/*\nvar time = metadata.ts;\n\n// Convert milliseconds to seconds\nvar secondsSinceEpoch = time / 1000;\n\n// Calculate the number of seconds in a year, month, and day\nvar secondsInYear = 365 * 24 * 60 * 60; // Approximation (ignoring leap years)\nvar secondsInMonth = 30 * 24 * 60 * 60; // Approximation (simplification)\nvar secondsInDay = 24 * 60 * 60;\n\n// Calculate year\nvar year = 1970;\nwhile (secondsSinceEpoch >= secondsInYear) {\n    secondsSinceEpoch -= secondsInYear;\n    year++;\n}\n\n// Calculate month\nvar month = 1; // January\nwhile (secondsSinceEpoch >= secondsInMonth) {\n    secondsSinceEpoch -= secondsInMonth;\n    month++;\n}\n\n// Calculate day\nvar day = 1; // Start from the first day of the month\nwhile (secondsSinceEpoch >= secondsInDay) {\n    secondsSinceEpoch -= secondsInDay;\n    day++;\n}\n\n// Calculate hours, minutes, and seconds\nvar hours = (secondsSinceEpoch / 3600) % 24;\nvar minutes = (secondsSinceEpoch / 60) % 60;\nvar seconds = secondsSinceEpoch % 60;\n\n// Construct a date string in the format \"YYYY-MM-DD\"\nmsg.date = year + \"-\" + (month < 10 ? \"0\" + month : month) + \"-\" + (day < 10 ? \"0\" + day : day);\n\n// Construct a time string (HH:mm:ss)\nmsg.timeOnly = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n\nmsg.time = time;\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n\n\n\n*/\n\n/*\n\n\nvar time = metadata.ts;\n\n// Convert milliseconds to seconds\nvar secondsSinceEpoch = time / 1000;\n\n// Calculate the number of seconds in a year, month, and day\nvar secondsInYear = 365 * 24 * 60 * 60; // Approximation (ignoring leap years)\nvar secondsInMonth = 30 * 24 * 60 * 60; // Approximation (simplification)\nvar secondsInDay = 24 * 60 * 60;\n\n// Calculate year\nvar year = 1970;\nwhile (secondsSinceEpoch >= secondsInYear) {\n    secondsSinceEpoch -= secondsInYear;\n    year++;\n}\n\n// Calculate month\nvar month = 1; // January\nwhile (secondsSinceEpoch >= secondsInMonth) {\n    secondsSinceEpoch -= secondsInMonth;\n    month++;\n}\n\n// Calculate day\nvar day = 1; // Start from the first day of the month\nwhile (secondsSinceEpoch >= secondsInDay) {\n    secondsSinceEpoch -= secondsInDay;\n    day++;\n}\n\n// Calculate hours, minutes, and seconds\nvar hours = (secondsSinceEpoch / 3600) % 24;\nvar minutes = (secondsSinceEpoch / 60) % 60;\nvar seconds = secondsSinceEpoch % 60;\n\n// Construct a date string in the format \"YYYY-MM-DD\"\nmsg.date = year + \"-\" + (month < 10 ? \"0\" + month : month) + \"-\" + (day < 10 ? \"0\" + day : day);\n\n// Construct a time string (HH:mm:ss)\nmsg.timeOnly = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n\nmsg.time = time;\n\nreturn { msg: msg, metadata: metadata, msgType: msgType };\n\n*/\n\n"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "ae6eda10-86f3-11ef-9570-4dbca12c5d75"
      },
      "name" : "ts converter",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    } ],
    "ruleChainConnections" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}